<?php

/**
 * Implementation of hook_menu().
 */
function hamster_menu() {
  $items = array();
  
  $items['hamster'] = array(
    'title' => 'Hamsters',
    'page callback' => 'hamster_list',
    'access arguments' => array('view hamster'),
    'file' => 'hamster.pages.inc',
  );
  
  $items['hamster/%hamster'] = array(
    'title callback' => 'hamster_page_title',
    'title arguments' => array(1),
    'page callback' => 'hamster_page',
    'page arguments' => array(1),
    'access arguments' => array('view hamster'),
    'file' => 'hamster.pages.inc',
  );
  
  $items['hamster/%hamster/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -1,
  );
  
  $items['hamster/%hamster/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hamster_edit_form', 1),
    'access arguments' => array('edit hamsters'),
    'file' => 'hamster.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  
    $items['hamster/%hamster/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hamster_delete_form', 1),
    'access arguments' => array('edit hamsters'),
    'file' => 'hamster.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  
  $items['hamster/add'] = array(
    'title' => 'Add Hamster',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hamster_edit_form'),
    'access arguments' => array('edit hamsters'),
    'file' => 'hamster.pages.inc',
    'type' => MENU_LOCAL_ACTION,
  );
  
  
  return $items;
}

/**
 * Implementation of hook_theme().
 */
function hamster_theme($existing, $type, $theme, $path) {
  return array(
    'hamster_info' => array(
      'variables' => array('hamster' => NULL),
    ),
  );
}

/**
 * Theme function for a full hamster page.
 * @param array $variables
 * @return string
 */
function theme_hamster_info($variables) {
  $hamster = $variables['hamster'];
  
  drupal_add_css(drupal_get_path('module', 'hamster') . '/hamster.css');
  
  $output = '<div class="hamster-page">';
  
  if (!empty($hamster->image)) {
    $image = file_load($hamster->image);
    $output .= '<div>' . theme('image_style', array('path' => $image->uri, 'style_name' => 'large')) . '</div>';
  }
  $output .= '<div><label class="inline">' . t('ID') . ':</label>' . $hamster->id . '</div>';
  $output .= '<div><label class="inline">' . t('Gender') . ':</label>' . $hamster->gender . '</div>';
  $output .= '<div><label class="inline">' . t('Weight') . ':</label>' . t('@weight g', array('@weight' => $hamster->weight)). '</div>';
  $output .= '<div><label class="inline">' . t('Birth Date') . ':</label>' . format_date($hamster->birthdate, 'custom', 'Y-m-d'). '</div>';
  $age = REQUEST_TIME - $hamster->birthdate;
  $output .= '<div><label class="inline">' . t('Age') . ':</label>' . format_interval($age, 2) . '</div>';
  $output .= '<div><label class="inline">' . t('Habitat') . ':</label>' . $hamster->habitat_name . '</div>';
  
  $output .= '</div>';
  return $output;
}

/**
 * Hamster load function.
 */
function hamster_load($id) {
  $result = db_query("SELECT h.*, hh.name AS habitat_name FROM {hamster} h
                      LEFT JOIN {hamster_habitat} hh ON h.habitat_id = hh.id
                      WHERE h.id = :hamster_id", array(':hamster_id' => $id))->fetchObject();
  return $result;
}

/**
 * Implementation of hook_permission().
 */
function hamster_permission() {
  return array(
    'view hamster' => array(
      'title' => t('View Hamsters'),
      'description' => t('View information about hamsters in the database.'),
    ),
    'edit hamsters' => array(
      'title' => t('Edit Hamsters'),
      'description' => t('Edit information about hamsters in the database.'),
    ),
  );
}
